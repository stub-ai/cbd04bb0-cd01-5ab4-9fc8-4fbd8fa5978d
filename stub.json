{"config":{"system_prompt":"","model":"","temperature":0,"top_p":1,"framework":"nextjs-page-tailwind"},"prompts":[{"prompt":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import LSTM, Dense\nfrom sklearn.model_selection import train_test_split\n\n# Your existing code for reading and combining CSV files\n# ...\n\ncombined_df = pd.concat(dfs,  axis=1)\nnew_columns = ['CH_Mumus', 'CH_1', 'CH_2', 'CH_3', 'CH_4', 'CH_5', 'CH_6', 'CH_7', 'CH_8', 'TMA']\ncombined_df.columns = new_columns\n\n# Define the training data size\ntrain_size = 2557\n\n# Split the dataset into training and test sets\ntrain_df = combined_df.iloc[:train_size]\ntest_df = combined_df.iloc[train_size:]\n\n# Scale the data\nscaler = MinMaxScaler(feature_range=(0, 1))\nscaled_train = scaler.fit_transform(train_df)\nscaled_test = scaler.transform(test_df)\n\n# Reshape data for LSTM\nX_train = scaled_train[:, :-1].reshape(-1, 2557, 9)\ny_train = scaled_train[:, -1].reshape(-1, 1)\nX_test = scaled_test[:, :-1].reshape(-1, 2923 - 2557, 9)\ny_test = scaled_test[:, -1].reshape(-1, 1)\n\n# Define LSTM model\nmodel = Sequential()\nmodel.add(LSTM(units=50, return_sequences=True, input_shape=(X_train.shape[1], X_train.shape[2])))\nmodel.add(LSTM(units=50))\nmodel.add(Dense(units=1))\nmodel.compile(optimizer='adam', loss='mean_squared_error')\nmodel.summary()\n\n# Train the model\nepochs = 100\nbatch_size = 32\nhistory = model.fit(X_train, y_train, epochs=epochs, batch_size=batch_size)\n\n# Testing model\n# For testing, you can now use X_test and y_test","md5":"165d7a4dcfeadf5f8ab74b9f96dff073"}]}